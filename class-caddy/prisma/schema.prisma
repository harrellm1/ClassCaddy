// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model Student {
    id          String @id @default(cuid())
    firstName   String
    lastName    String
    email       String  @unique
    password    String  
    courses     Course[]
    classtimes  ClassTime[]
    nextPayment DateTime?
    paidPlan    Boolean
    events      CalEvent[]
    assingments Assignment[]
}

model Course {
    id                  String @id @default(cuid())
    courseNumber        String
    courseName          String
    courseInstructor    String
    student             Student @relation(fields: [studentId], references:[email])
    studentId           String
    classtimes          ClassTime[] 
    assingments         Assignment[]
    Semester            String
    Year                Int
}


model ClassTime {
    id          String @id @default(cuid())
    courseId    String
    studentId   String
    course      Course @relation(fields: [courseId], references: [id])
    student     Student @relation(fields:[studentId], references: [email])
    day         Int //0 = sunday, 6 = saturday
    Period      Int  //enter 6 for period 6

}

model CalEvent {
    id      String  @id @default(cuid())
    title   String
    studentId   String
    student     Student @relation(fields: [studentId], references: [email])
    start       DateTime
    end         DateTime
    allDay      Boolean
    tag         String
    recurrence  String?
    recurrenceEnd   DateTime?
    recurrenceId    String?  
}




model Assignment {
  id          String      @id @default(cuid())
  title       String
  description String?
  dueDate     DateTime
  completed   Boolean  @default(false)
  studentId   String 
  courseId    String 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  student     Student     @relation(fields: [studentId], references: [email])
  course      Course      @relation(fields: [courseId], references: [id])
  courseNum   String
}

model Job {
    id String @id @default(cuid())
    jobTitle    String
    shifts      Shift[]
    studentId   String
    student     Studen @relation (fields: [studentId], references:[email])
}